

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Jan 22 18:36:55 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F877
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.31
    17                           ; Generated 13/10/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F877 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0098                     	;# 
   100  0099                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0088                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009E                     	;# 
   160  009F                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  010E                     	;# 
   164  010F                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167                           
   168                           	psect	idataBANK0
   169  073E                     __pidataBANK0:
   170                           
   171                           ;initializer for main@F882
   172  073E  343F               	retlw	63
   173  073F  3400               	retlw	0
   174  0740  3406               	retlw	6
   175  0741  3400               	retlw	0
   176  0742  345B               	retlw	91
   177  0743  3400               	retlw	0
   178  0744  344F               	retlw	79
   179  0745  3400               	retlw	0
   180  0746  3466               	retlw	102
   181  0747  3400               	retlw	0
   182  0748  346D               	retlw	109
   183  0749  3400               	retlw	0
   184  074A  347D               	retlw	125
   185  074B  3400               	retlw	0
   186  074C  3407               	retlw	7
   187  074D  3400               	retlw	0
   188  074E  347F               	retlw	127
   189  074F  3400               	retlw	0
   190  0750  346F               	retlw	111
   191  0751  3400               	retlw	0
   192  0006                     _PORTB	set	6
   193  0086                     _TRISB	set	134
   194                           
   195                           	psect	strings
   196  0003                     __pstrings:
   197  0003                     stringtab:
   198  0003                     __stringtab:
   199  0003                     stringcode:	
   200                           ;	String table - string pointers are 1 byte each
   201                           
   202  0003                     stringdir:
   203  0003  3000               	movlw	high stringdir
   204  0004  008A               	movwf	10
   205  0005  0804               	movf	4,w
   206  0006  0A84               	incf	4,f
   207  0007  0782               	addwf	2,f
   208  0008                     __stringbase:
   209  0008  3400               	retlw	0
   210  0009                     __end_of__stringtab:
   211  0009                     STR_1:
   212  0009  3449               	retlw	73	;'I'
   213  000A  346E               	retlw	110	;'n'
   214  000B  3476               	retlw	118	;'v'
   215  000C  3461               	retlw	97	;'a'
   216  000D  346C               	retlw	108	;'l'
   217  000E  3469               	retlw	105	;'i'
   218  000F  3464               	retlw	100	;'d'
   219  0010  3420               	retlw	32	;' '
   220  0011  3465               	retlw	101	;'e'
   221  0012  346E               	retlw	110	;'n'
   222  0013  3474               	retlw	116	;'t'
   223  0014  3472               	retlw	114	;'r'
   224  0015  3479               	retlw	121	;'y'
   225  0016  3421               	retlw	33	;'!'
   226  0017  3400               	retlw	0
   227                           
   228                           	psect	cinit
   229  07EE                     start_initialization:	
   230                           ; #config settings
   231                           
   232  07EE                     __initialization:
   233                           
   234                           ; Initialize objects allocated to BANK0
   235  07EE  1383               	bcf	3,7	;select IRP bank0
   236  07EF  3034               	movlw	low (__pdataBANK0+20)
   237  07F0  00FD               	movwf	btemp+-1
   238  07F1  3007               	movlw	high __pidataBANK0
   239  07F2  00FE               	movwf	btemp
   240  07F3  303E               	movlw	low __pidataBANK0
   241  07F4  00FF               	movwf	btemp+1
   242  07F5  3020               	movlw	low __pdataBANK0
   243  07F6  0084               	movwf	4
   244  07F7  120A  118A  272F  120A  118A  	fcall	init_ram0
   245  07FC                     end_of_initialization:	
   246                           ;End of C runtime variable initialization code
   247                           
   248  07FC                     __end_of__initialization:
   249  07FC  0183               	clrf	3
   250  07FD  120A  118A  2F71   	ljmp	_main	;jump to C main() function
   251                           
   252                           	psect	dataBANK0
   253  0020                     __pdataBANK0:
   254  0020                     main@F882:
   255  0020                     	ds	20
   256                           
   257                           	psect	inittext
   258  072B                     init_fetch0:	
   259                           ;	Called with low address in FSR and high address in W
   260                           
   261  072B  087E               	movf	btemp,w
   262  072C  008A               	movwf	10
   263  072D  087F               	movf	btemp+1,w
   264  072E  0082               	movwf	2
   265  072F                     init_ram0:	
   266                           ;Called with:
   267                           ;	high address of idata address in btemp 
   268                           ;	low address of idata address in btemp+1 
   269                           ;	low address of data in FSR
   270                           ;	high address + 1 of data in btemp-1
   271                           
   272  072F  120A  118A  272B  120A  118A  	fcall	init_fetch0
   273  0734  0080               	movwf	0
   274  0735  0A84               	incf	4,f
   275  0736  0804               	movf	4,w
   276  0737  067D               	xorwf	btemp+-1,w
   277  0738  1903               	btfsc	3,2
   278  0739  3400               	retlw	0
   279  073A  0AFF               	incf	btemp+1,f
   280  073B  1903               	btfsc	3,2
   281  073C  0AFE               	incf	btemp,f
   282  073D  2F2F               	goto	init_ram0
   283                           
   284                           	psect	cstackCOMMON
   285  0070                     __pcstackCOMMON:
   286  0070                     ??_printf:
   287  0070                     ?_putch:	
   288                           ; 1 bytes @ 0x0
   289                           
   290  0070                     ??_putch:	
   291                           ; 1 bytes @ 0x0
   292                           
   293  0070                     ?_printf:	
   294                           ; 1 bytes @ 0x0
   295                           
   296  0070                     ?_main:	
   297                           ; 2 bytes @ 0x0
   298                           
   299  0070                     putch@c:	
   300                           ; 2 bytes @ 0x0
   301                           
   302                           
   303                           ; 1 bytes @ 0x0
   304  0070                     	ds	1
   305  0071                     printf@ap:
   306                           
   307                           ; 1 bytes @ 0x1
   308  0071                     	ds	1
   309  0072                     printf@c:
   310                           
   311                           ; 1 bytes @ 0x2
   312  0072                     	ds	1
   313  0073                     printf@f:
   314                           
   315                           ; 1 bytes @ 0x3
   316  0073                     	ds	1
   317  0074                     ??_main:
   318                           
   319                           ; 1 bytes @ 0x4
   320  0074                     	ds	4
   321                           
   322                           	psect	cstackBANK0
   323  0034                     __pcstackBANK0:
   324  0034                     main@seg:
   325                           
   326                           ; 20 bytes @ 0x0
   327  0034                     	ds	20
   328                           
   329                           	psect	maintext
   330  0771                     __pmaintext:	
   331 ;;
   332 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   333 ;;
   334 ;; *************** function _main *****************
   335 ;; Defined at:
   336 ;;		line 5 in file "Task_b.c"
   337 ;; Parameters:    Size  Location     Type
   338 ;;		None
   339 ;; Auto vars:     Size  Location     Type
   340 ;;  seg            20    0[BANK0 ] int [10]
   341 ;;  n               2    0        int 
   342 ;; Return value:  Size  Location     Type
   343 ;;                  2   10[None  ] int 
   344 ;; Registers used:
   345 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   346 ;; Tracked objects:
   347 ;;		On entry : B00/0
   348 ;;		On exit  : 0/0
   349 ;;		Unchanged: 0/0
   350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   351 ;;      Params:         0       0       0       0       0
   352 ;;      Locals:         0      22       0       0       0
   353 ;;      Temps:          4       0       0       0       0
   354 ;;      Totals:         4      22       0       0       0
   355 ;;Total ram usage:       26 bytes
   356 ;; Hardware stack levels required when called:    2
   357 ;; This function calls:
   358 ;;		_printf
   359 ;; This function is called by:
   360 ;;		Startup code after reset
   361 ;; This function uses a non-reentrant model
   362 ;;
   363                           
   364                           
   365                           ;psect for function _main
   366  0771                     _main:
   367  0771                     l716:	
   368                           ;incstack = 0
   369                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   370                           
   371                           
   372                           ;Task_b.c: 7:     int n;;Task_b.c: 8:     int seg[10]={0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7
      +                          D,0x07,0x7F,0x6F};
   373  0771  3034               	movlw	main@seg& (0+255)
   374  0772  0084               	movwf	4
   375  0773  3020               	movlw	low main@F882
   376  0774  00F4               	movwf	??_main
   377  0775  0804               	movf	4,w
   378  0776  00F5               	movwf	??_main+1
   379  0777  3014               	movlw	20
   380  0778  00F6               	movwf	??_main+2
   381  0779                     u40:
   382  0779  0874               	movf	??_main,w
   383  077A  0084               	movwf	4
   384  077B  1383               	bcf	3,7	;select IRP bank0
   385  077C  0800               	movf	0,w
   386  077D  00F7               	movwf	??_main+3
   387  077E  0AF4               	incf	??_main,f
   388  077F  0875               	movf	??_main+1,w
   389  0780  0084               	movwf	4
   390  0781  0877               	movf	??_main+3,w
   391  0782  0080               	movwf	0
   392  0783  0AF5               	incf	??_main+1,f
   393  0784  0BF6               	decfsz	??_main+2,f
   394  0785  2F79               	goto	u40
   395  0786                     l718:
   396                           
   397                           ;Task_b.c: 10:     TRISB=0X00;
   398  0786  1683               	bsf	3,5	;RP0=1, select bank1
   399  0787  1303               	bcf	3,6	;RP1=0, select bank1
   400  0788  0186               	clrf	6	;volatile
   401  0789                     l720:
   402                           
   403                           ;Task_b.c: 11:     PORTB=0X00;
   404  0789  1283               	bcf	3,5	;RP0=0, select bank0
   405  078A  1303               	bcf	3,6	;RP1=0, select bank0
   406  078B  0186               	clrf	6	;volatile
   407  078C                     l722:
   408                           
   409                           ;Task_b.c: 18:     switch (n)
   410  078C  2FC6               	goto	l748
   411  078D                     l724:
   412                           
   413                           ;Task_b.c: 21:             PORTB = seg[0];
   414  078D  1283               	bcf	3,5	;RP0=0, select bank0
   415  078E  1303               	bcf	3,6	;RP1=0, select bank0
   416  078F  0834               	movf	main@seg,w
   417  0790  0086               	movwf	6	;volatile
   418                           
   419                           ;Task_b.c: 22:             break;
   420  0791  2F8C               	goto	l722
   421  0792                     l726:
   422                           
   423                           ;Task_b.c: 24:             PORTB = seg[1];
   424  0792  1283               	bcf	3,5	;RP0=0, select bank0
   425  0793  1303               	bcf	3,6	;RP1=0, select bank0
   426  0794  0836               	movf	main@seg+2,w
   427  0795  0086               	movwf	6	;volatile
   428                           
   429                           ;Task_b.c: 25:             break;
   430  0796  2F8C               	goto	l722
   431  0797                     l728:
   432                           
   433                           ;Task_b.c: 27:             PORTB = seg[2];
   434  0797  1283               	bcf	3,5	;RP0=0, select bank0
   435  0798  1303               	bcf	3,6	;RP1=0, select bank0
   436  0799  0838               	movf	main@seg+4,w
   437  079A  0086               	movwf	6	;volatile
   438                           
   439                           ;Task_b.c: 28:             break;
   440  079B  2F8C               	goto	l722
   441  079C                     l730:
   442                           
   443                           ;Task_b.c: 30:             PORTB = seg[3];
   444  079C  1283               	bcf	3,5	;RP0=0, select bank0
   445  079D  1303               	bcf	3,6	;RP1=0, select bank0
   446  079E  083A               	movf	main@seg+6,w
   447  079F  0086               	movwf	6	;volatile
   448                           
   449                           ;Task_b.c: 31:             break;
   450  07A0  2F8C               	goto	l722
   451  07A1                     l732:
   452                           
   453                           ;Task_b.c: 33:             PORTB = seg[4];
   454  07A1  1283               	bcf	3,5	;RP0=0, select bank0
   455  07A2  1303               	bcf	3,6	;RP1=0, select bank0
   456  07A3  083C               	movf	main@seg+8,w
   457  07A4  0086               	movwf	6	;volatile
   458                           
   459                           ;Task_b.c: 34:             break;
   460  07A5  2F8C               	goto	l722
   461  07A6                     l734:
   462                           
   463                           ;Task_b.c: 36:             PORTB = seg[5];
   464  07A6  1283               	bcf	3,5	;RP0=0, select bank0
   465  07A7  1303               	bcf	3,6	;RP1=0, select bank0
   466  07A8  083E               	movf	main@seg+10,w
   467  07A9  0086               	movwf	6	;volatile
   468                           
   469                           ;Task_b.c: 37:             break;
   470  07AA  2F8C               	goto	l722
   471  07AB                     l736:
   472                           
   473                           ;Task_b.c: 39:             PORTB = seg[6];
   474  07AB  1283               	bcf	3,5	;RP0=0, select bank0
   475  07AC  1303               	bcf	3,6	;RP1=0, select bank0
   476  07AD  0840               	movf	main@seg+12,w
   477  07AE  0086               	movwf	6	;volatile
   478                           
   479                           ;Task_b.c: 40:             break;
   480  07AF  2F8C               	goto	l722
   481  07B0                     l738:
   482                           
   483                           ;Task_b.c: 42:             PORTB = seg[7];
   484  07B0  1283               	bcf	3,5	;RP0=0, select bank0
   485  07B1  1303               	bcf	3,6	;RP1=0, select bank0
   486  07B2  0842               	movf	main@seg+14,w
   487  07B3  0086               	movwf	6	;volatile
   488                           
   489                           ;Task_b.c: 43:             break;
   490  07B4  2F8C               	goto	l722
   491  07B5                     l740:
   492                           
   493                           ;Task_b.c: 45:             PORTB = seg[8];
   494  07B5  1283               	bcf	3,5	;RP0=0, select bank0
   495  07B6  1303               	bcf	3,6	;RP1=0, select bank0
   496  07B7  0844               	movf	main@seg+16,w
   497  07B8  0086               	movwf	6	;volatile
   498                           
   499                           ;Task_b.c: 46:             break;
   500  07B9  2F8C               	goto	l722
   501  07BA                     l742:
   502                           
   503                           ;Task_b.c: 48:             PORTB = seg[9];
   504  07BA  1283               	bcf	3,5	;RP0=0, select bank0
   505  07BB  1303               	bcf	3,6	;RP1=0, select bank0
   506  07BC  0846               	movf	main@seg+18,w
   507  07BD  0086               	movwf	6	;volatile
   508                           
   509                           ;Task_b.c: 49:             break;
   510  07BE  2F8C               	goto	l722
   511  07BF                     l744:
   512                           
   513                           ;Task_b.c: 51:             printf("Invalid entry!");
   514  07BF  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   515  07C0  120A  118A  2752  120A  118A  	fcall	_printf
   516                           
   517                           ;Task_b.c: 52:             break;
   518  07C5  2F8C               	goto	l722
   519  07C6                     l748:
   520                           
   521                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   522                           ; Switch size 1, requested type "simple"
   523                           ; Number of cases is 1, Range of values is 0 to 0
   524                           ; switch strategies available:
   525                           ; Name         Instructions Cycles
   526                           ; simple_byte            4     3 (average)
   527                           ; direct_byte           11     8 (fixed)
   528                           ; jumptable            260     6 (fixed)
   529                           ;	Chosen strategy is simple_byte
   530  07C6  3000               	movlw	0
   531  07C7  3A00               	xorlw	0	; case 0
   532  07C8  1903               	skipnz
   533  07C9  2FCB               	goto	l786
   534  07CA  2FBF               	goto	l744
   535  07CB                     l786:
   536                           
   537                           ; Switch size 1, requested type "simple"
   538                           ; Number of cases is 10, Range of values is 0 to 9
   539                           ; switch strategies available:
   540                           ; Name         Instructions Cycles
   541                           ; simple_byte           31    16 (average)
   542                           ; direct_byte           38     8 (fixed)
   543                           ; jumptable            260     6 (fixed)
   544                           ;	Chosen strategy is simple_byte
   545  07CB  3005               	movlw	5
   546  07CC  3A00               	xorlw	0	; case 0
   547  07CD  1903               	skipnz
   548  07CE  2F8D               	goto	l724
   549  07CF  3A01               	xorlw	1	; case 1
   550  07D0  1903               	skipnz
   551  07D1  2F92               	goto	l726
   552  07D2  3A03               	xorlw	3	; case 2
   553  07D3  1903               	skipnz
   554  07D4  2F97               	goto	l728
   555  07D5  3A01               	xorlw	1	; case 3
   556  07D6  1903               	skipnz
   557  07D7  2F9C               	goto	l730
   558  07D8  3A07               	xorlw	7	; case 4
   559  07D9  1903               	skipnz
   560  07DA  2FA1               	goto	l732
   561  07DB  3A01               	xorlw	1	; case 5
   562  07DC  1903               	skipnz
   563  07DD  2FA6               	goto	l734
   564  07DE  3A03               	xorlw	3	; case 6
   565  07DF  1903               	skipnz
   566  07E0  2FAB               	goto	l736
   567  07E1  3A01               	xorlw	1	; case 7
   568  07E2  1903               	skipnz
   569  07E3  2FB0               	goto	l738
   570  07E4  3A0F               	xorlw	15	; case 8
   571  07E5  1903               	skipnz
   572  07E6  2FB5               	goto	l740
   573  07E7  3A01               	xorlw	1	; case 9
   574  07E8  1903               	skipnz
   575  07E9  2FBA               	goto	l742
   576  07EA  2FBF               	goto	l744
   577  07EB  120A  118A  2800   	ljmp	start
   578  07EE                     __end_of_main:
   579                           
   580                           	psect	text1
   581  0752                     __ptext1:	
   582 ;; *************** function _printf *****************
   583 ;; Defined at:
   584 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
   585 ;; Parameters:    Size  Location     Type
   586 ;;  f               1    wreg     PTR const unsigned char 
   587 ;;		 -> STR_1(15), 
   588 ;; Auto vars:     Size  Location     Type
   589 ;;  f               1    3[COMMON] PTR const unsigned char 
   590 ;;		 -> STR_1(15), 
   591 ;;  tmpval          4    0        struct .
   592 ;;  cp              2    0        PTR const unsigned char 
   593 ;;  len             2    0        unsigned int 
   594 ;;  val             2    0        unsigned int 
   595 ;;  c               1    2[COMMON] unsigned char 
   596 ;;  ap              1    1[COMMON] PTR void [1]
   597 ;;		 -> ?_printf(2), 
   598 ;;  flag            1    0        unsigned char 
   599 ;;  prec            1    0        char 
   600 ;; Return value:  Size  Location     Type
   601 ;;                  2    6[None  ] int 
   602 ;; Registers used:
   603 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   604 ;; Tracked objects:
   605 ;;		On entry : 0/0
   606 ;;		On exit  : 0/0
   607 ;;		Unchanged: 0/0
   608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   609 ;;      Params:         0       0       0       0       0
   610 ;;      Locals:         3       0       0       0       0
   611 ;;      Temps:          1       0       0       0       0
   612 ;;      Totals:         4       0       0       0       0
   613 ;;Total ram usage:        4 bytes
   614 ;; Hardware stack levels used:    1
   615 ;; Hardware stack levels required when called:    1
   616 ;; This function calls:
   617 ;;		_putch
   618 ;; This function is called by:
   619 ;;		_main
   620 ;; This function uses a non-reentrant model
   621 ;;
   622                           
   623                           
   624                           ;psect for function _printf
   625  0752                     _printf:
   626                           
   627                           ;incstack = 0
   628                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   629                           ;printf@f stored from wreg
   630  0752  00F3               	movwf	printf@f
   631  0753                     l710:
   632                           
   633                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 477: printf(const
      +                           char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 47
      +                          8: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 479:  va_list
      +                           ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 512:  char c;
      +                          ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521:  signed char
      +                           prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 525:  unsig
      +                          ned char flag;
   634  0753  3070               	movlw	(low (?_printf| 0))& (0+255)
   635  0754  00F0               	movwf	??_printf
   636  0755  0870               	movf	??_printf,w
   637  0756  00F1               	movwf	printf@ap
   638                           
   639                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   640  0757  2F5E               	goto	l714
   641  0758                     l712:
   642                           
   643                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    (putch(c) );
   644  0758  0872               	movf	printf@c,w
   645  0759  120A  118A  272A  120A  118A  	fcall	_putch
   646  075E                     l714:	
   647                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
   648                           
   649                           
   650                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   651  075E  3001               	movlw	1
   652  075F  07F3               	addwf	printf@f,f
   653  0760  30FF               	movlw	-1
   654  0761  0773               	addwf	printf@f,w
   655  0762  0084               	movwf	4
   656  0763  120A  118A  2003  120A  118A  	fcall	stringdir
   657  0768  00F0               	movwf	??_printf
   658  0769  0870               	movf	??_printf,w
   659  076A  00F2               	movwf	printf@c
   660  076B  0872               	movf	printf@c,w
   661  076C  1D03               	btfss	3,2
   662  076D  2F6F               	goto	u31
   663  076E  2F70               	goto	u30
   664  076F                     u31:
   665  076F  2F58               	goto	l712
   666  0770                     u30:
   667  0770                     l121:
   668  0770  0008               	return
   669  0771                     __end_of_printf:
   670                           
   671                           	psect	text2
   672  072A                     __ptext2:	
   673 ;; *************** function _putch *****************
   674 ;; Defined at:
   675 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\putch.c"
   676 ;; Parameters:    Size  Location     Type
   677 ;;  c               1    wreg     unsigned char 
   678 ;; Auto vars:     Size  Location     Type
   679 ;;  c               1    0[COMMON] unsigned char 
   680 ;; Return value:  Size  Location     Type
   681 ;;                  1    wreg      void 
   682 ;; Registers used:
   683 ;;		wreg
   684 ;; Tracked objects:
   685 ;;		On entry : 0/0
   686 ;;		On exit  : 0/0
   687 ;;		Unchanged: 0/0
   688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   689 ;;      Params:         0       0       0       0       0
   690 ;;      Locals:         0       0       0       0       0
   691 ;;      Temps:          0       0       0       0       0
   692 ;;      Totals:         0       0       0       0       0
   693 ;;Total ram usage:        0 bytes
   694 ;; Hardware stack levels used:    1
   695 ;; This function calls:
   696 ;;		Nothing
   697 ;; This function is called by:
   698 ;;		_printf
   699 ;; This function uses a non-reentrant model
   700 ;;
   701                           
   702                           
   703                           ;psect for function _putch
   704  072A                     _putch:
   705  072A                     l576:	
   706                           ;incstack = 0
   707                           ; Regs used in _putch: [wreg]
   708                           
   709  072A  0008               	return
   710  072B                     __end_of_putch:
   711  007E                     btemp	set	126	;btemp
   712  007E                     wtemp0	set	126

Data Sizes:
    Strings     15
    Constant    0
    Data        20
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80     22      42
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 


Critical Paths under _main in COMMON

    _main->_printf

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                26    26      0     332
                                              4 COMMON     4     4      0
                                              0 BANK0     22    22      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              16    16      0      79
                                              0 COMMON     4     4      0
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _printf
     _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     16      2A       5       52.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       8       1       57.1%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      32      12        0.0%
ABS                  0      0      32       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Jan 22 18:36:55 2021

                      pc 0002                       u30 0770                       u31 076F  
                     u40 0779                       fsr 0004                      l121 0770  
                    l710 0753                      l712 0758                      l720 0789  
                    l714 075E                      l730 079C                      l722 078C  
                    l740 07B5                      l732 07A1                      l724 078D  
                    l716 0771                      l742 07BA                      l734 07A6  
                    l726 0792                      l718 0786                      l576 072A  
                    l744 07BF                      l736 07AB                      l728 0797  
                    l738 07B0                      l748 07C6                      l786 07CB  
                    fsr0 0004                      indf 0000                     STR_1 0009  
                   _main 0771                     btemp 007E                     start 0000  
                  ?_main 0070                    _PORTB 0006                    _TRISB 0086  
                  _putch 072A                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07EE             __end_of_main 07EE  
                 ??_main 0074                   ?_putch 0070                   _printf 0752  
                 putch@c 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 073E            __end_of_putch 072B                  ??_putch 0070  
             __pmaintext 0771                  ?_printf 0070               __stringtab 0003  
                __ptext1 0752                  __ptext2 072A          __size_of_printf 001F  
                main@seg 0034     end_of_initialization 07FC                  printf@c 0072  
                printf@f 0073           __end_of_printf 0771      start_initialization 07EE  
             init_fetch0 072B              __pdataBANK0 0020                 ??_printf 0070  
              ___latbits 0002            __pcstackBANK0 0034                __pstrings 0003  
         __size_of_putch 0001              __stringbase 0008       __end_of__stringtab 0009  
          __size_of_main 007D                 main@F882 0020                 init_ram0 072F  
              stringcode 0003                 printf@ap 0071                 stringdir 0003  
               stringtab 0003  
